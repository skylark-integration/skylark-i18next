{"version":3,"sources":["BackendConnector.js"],"names":["define","utils","baseLogger","EventEmitter","[object Object]","backend","store","services","options","super","isIE10","call","this","languageUtils","logger","create","state","queue","init","languages","namespaces","callback","toLoad","pending","toLoadLanguages","toLoadNamespaces","forEach","lng","hasAllNamespaces","ns","name","reload","hasResourceBundle","indexOf","push","length","loaded","errors","err","data","s","split","emit","addResourceBundle","q","pushPath","arr","what","found","splice","remove","done","Object","keys","l","filter","fcName","tried","wait","setTimeout","read","warn","toResolveHierarchy","queueLoad","loadOne","prepareLoading","prefix","undefined","log","namespace","key","fallbackValue","isUpdate","hasLoadedNamespace","addResource"],"mappings":";;;;;;;AAAAA,QACI,UACA,WACA,kBACD,SAAUC,EAAOC,EAAYC,GAC5B,aAgLA,qBAxKwBA,EACpBC,YAAYC,EAASC,EAAOC,EAAUC,MAClCC,QACIR,EAAMS,QACNP,EAAaQ,KAAKC,MAEtBA,KAAKP,QAAUA,EACfO,KAAKN,MAAQA,EACbM,KAAKL,SAAWA,EAChBK,KAAKC,cAAgBN,EAASM,cAC9BD,KAAKJ,QAAUA,EACfI,KAAKE,OAASZ,EAAWa,OAAO,oBAChCH,KAAKI,SACLJ,KAAKK,SACDL,KAAKP,SAAWO,KAAKP,QAAQa,MAC7BN,KAAKP,QAAQa,KAAKX,EAAUC,EAAQH,QAASG,GAGrDJ,UAAUe,EAAWC,EAAYZ,EAASa,GACtC,MAAMC,KACAC,KACAC,KACAC,KAiCN,OAhCAN,EAAUO,QAAQC,IACd,IAAIC,GAAmB,EACvBR,EAAWM,QAAQG,IACf,MAAMC,KAAWH,KAASE,KACrBrB,EAAQuB,QAAUnB,KAAKN,MAAM0B,kBAAkBL,EAAKE,GACrDjB,KAAKI,MAAMc,GAAQ,EACZlB,KAAKI,MAAMc,GAAQ,IACE,IAArBlB,KAAKI,MAAMc,GACdP,EAAQU,QAAQH,GAAQ,GACxBP,EAAQW,KAAKJ,IAEjBlB,KAAKI,MAAMc,GAAQ,EACnBF,GAAmB,EACfL,EAAQU,QAAQH,GAAQ,GACxBP,EAAQW,KAAKJ,GACbR,EAAOW,QAAQH,GAAQ,GACvBR,EAAOY,KAAKJ,GACZL,EAAiBQ,QAAQJ,GAAM,GAC/BJ,EAAiBS,KAAKL,OAG7BD,GACDJ,EAAgBU,KAAKP,MAEzBL,EAAOa,QAAUZ,EAAQY,SACzBvB,KAAKK,MAAMiB,MACPX,QAAAA,EACAa,UACAC,UACAhB,SAAAA,KAIJC,OAAAA,EACAC,QAAAA,EACAC,gBAAAA,EACAC,iBAAAA,GAGRrB,OAAO0B,EAAMQ,EAAKC,GACd,MAAMC,EAAIV,EAAKW,MAAM,KACfd,EAAMa,EAAE,GACRX,EAAKW,EAAE,GACTF,GACA1B,KAAK8B,KAAK,gBAAiBf,EAAKE,EAAIS,GACpCC,GACA3B,KAAKN,MAAMqC,kBAAkBhB,EAAKE,EAAIU,GAE1C3B,KAAKI,MAAMc,GAAQQ,GAAO,EAAI,EAC9B,MAAMF,KACNxB,KAAKK,MAAMS,QAAQkB,IACf3C,EAAM4C,SAASD,EAAER,QAAST,GAAME,GAjF5C,SAAgBiB,EAAKC,GACjB,IAAIC,EAAQF,EAAIb,QAAQc,GACxB,MAAkB,IAAXC,GACHF,EAAIG,OAAOD,EAAO,GAClBA,EAAQF,EAAIb,QAAQc,GA8EhBG,CAAON,EAAErB,QAASO,GACdQ,GACAM,EAAEP,OAAOH,KAAKI,GACO,IAArBM,EAAErB,QAAQY,QAAiBS,EAAEO,OAC7BC,OAAOC,KAAKT,EAAER,QAAQV,QAAQ4B,IACrBlB,EAAOkB,KACRlB,EAAOkB,OACPV,EAAER,OAAOkB,GAAGnB,QACZS,EAAER,OAAOkB,GAAG5B,QAAQG,IACZO,EAAOkB,GAAGrB,QAAQJ,GAAM,GACxBO,EAAOkB,GAAGpB,KAAKL,OAI/Be,EAAEO,MAAO,EACLP,EAAEP,OAAOF,OACTS,EAAEvB,SAASuB,EAAEP,QAEbO,EAAEvB,cAIdT,KAAK8B,KAAK,SAAUN,GACpBxB,KAAKK,MAAQL,KAAKK,MAAMsC,OAAOX,IAAMA,EAAEO,MAE3C/C,KAAKuB,EAAKE,EAAI2B,EAAQC,EAAQ,EAAGC,EAAO,IAAKrC,GACzC,OAAKM,EAAIQ,OAEFvB,KAAKP,QAAQmD,GAAQ7B,EAAKE,EAAI,CAACS,EAAKC,KACnCD,GAAOC,GAAQkB,EAAQ,EACvBE,WAAW,KACP/C,KAAKgD,KAAKjD,KAAKC,KAAMe,EAAKE,EAAI2B,EAAQC,EAAQ,EAAU,EAAPC,EAAUrC,IAC5DqC,GAGPrC,EAASiB,EAAKC,KARPlB,EAAS,SAWxBjB,eAAee,EAAWC,EAAYZ,KAAca,GAChD,IAAKT,KAAKP,QAEN,OADAO,KAAKE,OAAO+C,KAAK,kEACVxC,GAAYA,IAEE,iBAAdF,IACPA,EAAYP,KAAKC,cAAciD,mBAAmB3C,IAC5B,iBAAfC,IACPA,GAAcA,IAClB,MAAME,EAASV,KAAKmD,UAAU5C,EAAWC,EAAYZ,EAASa,GAC9D,IAAKC,EAAOA,OAAOa,OAGf,OAFKb,EAAOC,QAAQY,QAChBd,IACG,KAEXC,EAAOA,OAAOI,QAAQI,IAClBlB,KAAKoD,QAAQlC,KAGrB1B,KAAKe,EAAWC,EAAYC,GACxBT,KAAKqD,eAAe9C,EAAWC,KAAgBC,GAEnDjB,OAAOe,EAAWC,EAAYC,GAC1BT,KAAKqD,eAAe9C,EAAWC,GAAcW,QAAQ,GAAQV,GAEjEjB,QAAQ0B,EAAMoC,EAAS,IACnB,MAAM1B,EAAIV,EAAKW,MAAM,KACfd,EAAMa,EAAE,GACRX,EAAKW,EAAE,GACb5B,KAAKgD,KAAKjC,EAAKE,EAAI,YAAQsC,OAAWA,EAAW,CAAC7B,EAAKC,KAC/CD,GACA1B,KAAKE,OAAO+C,QAASK,sBAA6BrC,kBAAqBF,WAAeW,IACrFA,GAAOC,GACR3B,KAAKE,OAAOsD,OAAQF,qBAA4BrC,kBAAqBF,IAAQY,GACjF3B,KAAKwB,OAAON,EAAMQ,EAAKC,KAG/BnC,YAAYe,EAAWkD,EAAWC,EAAKC,EAAeC,EAAUhE,MACxDI,KAAKL,SAASN,OAASW,KAAKL,SAASN,MAAMwE,qBAAuB7D,KAAKL,SAASN,MAAMwE,mBAAmBJ,GACzGzD,KAAKE,OAAO+C,0BAA2BS,wBAA4BD,wBAAkC,iOAG7FF,IAARG,GAA6B,OAARA,GAAwB,KAARA,IAErC1D,KAAKP,SAAWO,KAAKP,QAAQU,QAC7BH,KAAKP,QAAQU,OAAOI,EAAWkD,EAAWC,EAAKC,EAAe,SACvD/D,EACHgE,SAAAA,IAGHrD,GAAcA,EAAU,IAE7BP,KAAKN,MAAMoE,YAAYvD,EAAU,GAAIkD,EAAWC,EAAKC","file":"../BackendConnector.js","sourcesContent":["define([\n    './utils',\n    './logger',\n    './EventEmitter'\n], function (utils, baseLogger, EventEmitter) {\n    'use strict';\n    function remove(arr, what) {\n        let found = arr.indexOf(what);\n        while (found !== -1) {\n            arr.splice(found, 1);\n            found = arr.indexOf(what);\n        }\n    }\n    class Connector extends EventEmitter {\n        constructor(backend, store, services, options = {}) {\n            super();\n            if (utils.isIE10) {\n                EventEmitter.call(this);\n            }\n            this.backend = backend;\n            this.store = store;\n            this.services = services;\n            this.languageUtils = services.languageUtils;\n            this.options = options;\n            this.logger = baseLogger.create('backendConnector');\n            this.state = {};\n            this.queue = [];\n            if (this.backend && this.backend.init) {\n                this.backend.init(services, options.backend, options);\n            }\n        }\n        queueLoad(languages, namespaces, options, callback) {\n            const toLoad = [];\n            const pending = [];\n            const toLoadLanguages = [];\n            const toLoadNamespaces = [];\n            languages.forEach(lng => {\n                let hasAllNamespaces = true;\n                namespaces.forEach(ns => {\n                    const name = `${ lng }|${ ns }`;\n                    if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n                        this.state[name] = 2;\n                    } else if (this.state[name] < 0) {\n                    } else if (this.state[name] === 1) {\n                        if (pending.indexOf(name) < 0)\n                            pending.push(name);\n                    } else {\n                        this.state[name] = 1;\n                        hasAllNamespaces = false;\n                        if (pending.indexOf(name) < 0)\n                            pending.push(name);\n                        if (toLoad.indexOf(name) < 0)\n                            toLoad.push(name);\n                        if (toLoadNamespaces.indexOf(ns) < 0)\n                            toLoadNamespaces.push(ns);\n                    }\n                });\n                if (!hasAllNamespaces)\n                    toLoadLanguages.push(lng);\n            });\n            if (toLoad.length || pending.length) {\n                this.queue.push({\n                    pending,\n                    loaded: {},\n                    errors: [],\n                    callback\n                });\n            }\n            return {\n                toLoad,\n                pending,\n                toLoadLanguages,\n                toLoadNamespaces\n            };\n        }\n        loaded(name, err, data) {\n            const s = name.split('|');\n            const lng = s[0];\n            const ns = s[1];\n            if (err)\n                this.emit('failedLoading', lng, ns, err);\n            if (data) {\n                this.store.addResourceBundle(lng, ns, data);\n            }\n            this.state[name] = err ? -1 : 2;\n            const loaded = {};\n            this.queue.forEach(q => {\n                utils.pushPath(q.loaded, [lng], ns);\n                remove(q.pending, name);\n                if (err)\n                    q.errors.push(err);\n                if (q.pending.length === 0 && !q.done) {\n                    Object.keys(q.loaded).forEach(l => {\n                        if (!loaded[l])\n                            loaded[l] = [];\n                        if (q.loaded[l].length) {\n                            q.loaded[l].forEach(ns => {\n                                if (loaded[l].indexOf(ns) < 0)\n                                    loaded[l].push(ns);\n                            });\n                        }\n                    });\n                    q.done = true;\n                    if (q.errors.length) {\n                        q.callback(q.errors);\n                    } else {\n                        q.callback();\n                    }\n                }\n            });\n            this.emit('loaded', loaded);\n            this.queue = this.queue.filter(q => !q.done);\n        }\n        read(lng, ns, fcName, tried = 0, wait = 350, callback) {\n            if (!lng.length)\n                return callback(null, {});\n            return this.backend[fcName](lng, ns, (err, data) => {\n                if (err && data && tried < 5) {\n                    setTimeout(() => {\n                        this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n                    }, wait);\n                    return;\n                }\n                callback(err, data);\n            });\n        }\n        prepareLoading(languages, namespaces, options = {}, callback) {\n            if (!this.backend) {\n                this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n                return callback && callback();\n            }\n            if (typeof languages === 'string')\n                languages = this.languageUtils.toResolveHierarchy(languages);\n            if (typeof namespaces === 'string')\n                namespaces = [namespaces];\n            const toLoad = this.queueLoad(languages, namespaces, options, callback);\n            if (!toLoad.toLoad.length) {\n                if (!toLoad.pending.length)\n                    callback();\n                return null;\n            }\n            toLoad.toLoad.forEach(name => {\n                this.loadOne(name);\n            });\n        }\n        load(languages, namespaces, callback) {\n            this.prepareLoading(languages, namespaces, {}, callback);\n        }\n        reload(languages, namespaces, callback) {\n            this.prepareLoading(languages, namespaces, { reload: true }, callback);\n        }\n        loadOne(name, prefix = '') {\n            const s = name.split('|');\n            const lng = s[0];\n            const ns = s[1];\n            this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n                if (err)\n                    this.logger.warn(`${ prefix }loading namespace ${ ns } for language ${ lng } failed`, err);\n                if (!err && data)\n                    this.logger.log(`${ prefix }loaded namespace ${ ns } for language ${ lng }`, data);\n                this.loaded(name, err, data);\n            });\n        }\n        saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}) {\n            if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n                this.logger.warn(`did not save key \"${ key }\" as the namespace \"${ namespace }\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n                return;\n            }\n            if (key === undefined || key === null || key === '')\n                return;\n            if (this.backend && this.backend.create) {\n                this.backend.create(languages, namespace, key, fallbackValue, null, {\n                    ...options,\n                    isUpdate\n                });\n            }\n            if (!languages || !languages[0])\n                return;\n            this.store.addResource(languages[0], namespace, key, fallbackValue);\n        }\n    }\n    return Connector;\n});"]}