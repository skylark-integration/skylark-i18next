{"version":3,"sources":["ResourceStore.js"],"names":["define","EventEmitter","utils","[object Object]","data","options","ns","defaultNS","super","isIE10","call","this","undefined","keySeparator","indexOf","push","index","splice","lng","key","path","concat","split","getPath","value","silent","addNamespaces","setPath","emit","resources","m","Object","prototype","toString","apply","addResource","deep","overwrite","pack","deepExtend","hasResourceBundle","removeNamespaces","getResource","compatibilityAPI"],"mappings":"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","file":"../ResourceStore.js","sourcesContent":["define([\n    './EventEmitter',\n    './utils'\n], function (EventEmitter, utils) {\n    'use strict';\n    class ResourceStore extends EventEmitter {\n        constructor(data, options = {\n            ns: ['translation'],\n            defaultNS: 'translation'\n        }) {\n            super();\n            if (utils.isIE10) {\n                EventEmitter.call(this);\n            }\n            this.data = data || {};\n            this.options = options;\n            if (this.options.keySeparator === undefined) {\n                this.options.keySeparator = '.';\n            }\n        }\n        addNamespaces(ns) {\n            if (this.options.ns.indexOf(ns) < 0) {\n                this.options.ns.push(ns);\n            }\n        }\n        removeNamespaces(ns) {\n            const index = this.options.ns.indexOf(ns);\n            if (index > -1) {\n                this.options.ns.splice(index, 1);\n            }\n        }\n        getResource(lng, ns, key, options = {}) {\n            const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n            let path = [\n                lng,\n                ns\n            ];\n            if (key && typeof key !== 'string')\n                path = path.concat(key);\n            if (key && typeof key === 'string')\n                path = path.concat(keySeparator ? key.split(keySeparator) : key);\n            if (lng.indexOf('.') > -1) {\n                path = lng.split('.');\n            }\n            return utils.getPath(this.data, path);\n        }\n        addResource(lng, ns, key, value, options = { silent: false }) {\n            let keySeparator = this.options.keySeparator;\n            if (keySeparator === undefined)\n                keySeparator = '.';\n            let path = [\n                lng,\n                ns\n            ];\n            if (key)\n                path = path.concat(keySeparator ? key.split(keySeparator) : key);\n            if (lng.indexOf('.') > -1) {\n                path = lng.split('.');\n                value = ns;\n                ns = path[1];\n            }\n            this.addNamespaces(ns);\n            utils.setPath(this.data, path, value);\n            if (!options.silent)\n                this.emit('added', lng, ns, key, value);\n        }\n        addResources(lng, ns, resources, options = { silent: false }) {\n            for (const m in resources) {\n                if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]')\n                    this.addResource(lng, ns, m, resources[m], { silent: true });\n            }\n            if (!options.silent)\n                this.emit('added', lng, ns, resources);\n        }\n        addResourceBundle(lng, ns, resources, deep, overwrite, options = { silent: false }) {\n            let path = [\n                lng,\n                ns\n            ];\n            if (lng.indexOf('.') > -1) {\n                path = lng.split('.');\n                deep = resources;\n                resources = ns;\n                ns = path[1];\n            }\n            this.addNamespaces(ns);\n            let pack = utils.getPath(this.data, path) || {};\n            if (deep) {\n                utils.deepExtend(pack, resources, overwrite);\n            } else {\n                pack = {\n                    ...pack,\n                    ...resources\n                };\n            }\n            utils.setPath(this.data, path, pack);\n            if (!options.silent)\n                this.emit('added', lng, ns, resources);\n        }\n        removeResourceBundle(lng, ns) {\n            if (this.hasResourceBundle(lng, ns)) {\n                delete this.data[lng][ns];\n            }\n            this.removeNamespaces(ns);\n            this.emit('removed', lng, ns);\n        }\n        hasResourceBundle(lng, ns) {\n            return this.getResource(lng, ns) !== undefined;\n        }\n        getResourceBundle(lng, ns) {\n            if (!ns)\n                ns = this.options.defaultNS;\n            if (this.options.compatibilityAPI === 'v1')\n                return {\n                    ...{},\n                    ...this.getResource(lng, ns)\n                };\n            return this.getResource(lng, ns);\n        }\n        getDataByLanguage(lng) {\n            return this.data[lng];\n        }\n        toJSON() {\n            return this.data;\n        }\n    }\n    return ResourceStore;\n});"]}