{"version":3,"sources":["defaults.js"],"names":["define","get","debug","initImmediate","ns","defaultNS","fallbackLng","fallbackNS","whitelist","nonExplicitWhitelist","supportedLngs","nonExplicitSupportedLngs","load","preload","simplifyPluralSuffix","keySeparator","nsSeparator","pluralSeparator","contextSeparator","partialBundledLanguages","saveMissing","updateMissing","saveMissingTo","saveMissingPlurals","missingKeyHandler","missingInterpolationHandler","postProcess","postProcessPassResolved","returnNull","returnEmptyString","returnObjects","joinArrays","returnedObjectHandler","parseMissingKeyHandler","appendNamespaceToMissingKey","appendNamespaceToCIMode","overloadTranslationOptionHandler","args","ret","defaultValue","tDescription","options","Object","keys","forEach","key","interpolation","escapeValue","format","value","lng","prefix","suffix","formatSeparator","unescapePrefix","nestingPrefix","nestingSuffix","nestingOptionsSeparator","maxReplaces","skipOnVariables","transformOptions","indexOf","concat"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aA2FA,OACIC,IA3FJ,WACI,OACIC,OAAO,EACPC,eAAe,EACfC,IAAK,eACLC,WAAY,eACZC,aAAc,OACdC,YAAY,EACZC,WAAW,EACXC,sBAAsB,EACtBC,eAAe,EACfC,0BAA0B,EAC1BC,KAAM,MACNC,SAAS,EACTC,sBAAsB,EACtBC,aAAc,IACdC,YAAa,IACbC,gBAAiB,IACjBC,iBAAkB,IAClBC,yBAAyB,EACzBC,aAAa,EACbC,eAAe,EACfC,cAAe,WACfC,oBAAoB,EACpBC,mBAAmB,EACnBC,6BAA6B,EAC7BC,aAAa,EACbC,yBAAyB,EACzBC,YAAY,EACZC,mBAAmB,EACnBC,eAAe,EACfC,YAAY,EACZC,uBAAuB,EACvBC,wBAAwB,EACxBC,6BAA6B,EAC7BC,yBAAyB,EACzBC,iCAAkC,SAAgBC,GAC9C,IAAIC,KAOJ,GANuB,iBAAZD,EAAK,KACZC,EAAMD,EAAK,IACQ,iBAAZA,EAAK,KACZC,EAAIC,aAAeF,EAAK,IACL,iBAAZA,EAAK,KACZC,EAAIE,aAAeH,EAAK,IACL,iBAAZA,EAAK,IAAsC,iBAAZA,EAAK,GAAiB,CAC5D,IAAII,EAAUJ,EAAK,IAAMA,EAAK,GAC9BK,OAAOC,KAAKF,GAASG,QAAQ,SAAUC,GACnCP,EAAIO,GAAOJ,EAAQI,KAG3B,OAAOP,GAEXQ,eACIC,aAAa,EACbC,OAAQ,CAACC,EAAOD,EAAQE,EAAKT,IAAYQ,EACzCE,OAAQ,KACRC,OAAQ,KACRC,gBAAiB,IACjBC,eAAgB,IAChBC,cAAe,MACfC,cAAe,IACfC,wBAAyB,IACzBC,YAAa,IACbC,iBAAiB,KA6BzBC,iBAxBJ,SAA0BnB,GAmBtB,MAlB0B,iBAAfA,EAAQrC,KACfqC,EAAQrC,IAAMqC,EAAQrC,KACS,iBAAxBqC,EAAQnC,cACfmC,EAAQnC,aAAemC,EAAQnC,cACD,iBAAvBmC,EAAQlC,aACfkC,EAAQlC,YAAckC,EAAQlC,aAC9BkC,EAAQjC,YACJiC,EAAQjC,WAAaiC,EAAQjC,UAAUqD,QAAQ,UAAY,IAC3DpB,EAAQjC,UAAYiC,EAAQjC,UAAUsD,QAAQ,YAElDrB,EAAQ/B,cAAgB+B,EAAQjC,WAEhCiC,EAAQhC,uBACRgC,EAAQ9B,yBAA2B8B,EAAQhC,sBAE3CgC,EAAQ/B,eAAiB+B,EAAQ/B,cAAcmD,QAAQ,UAAY,IACnEpB,EAAQ/B,cAAgB+B,EAAQ/B,cAAcoD,QAAQ,YAEnDrB","file":"../defaults.js","sourcesContent":["define(function () {\n    'use strict';\n    function get() {\n        return {\n            debug: false,\n            initImmediate: true,\n            ns: ['translation'],\n            defaultNS: ['translation'],\n            fallbackLng: ['dev'],\n            fallbackNS: false,\n            whitelist: false,\n            nonExplicitWhitelist: false,\n            supportedLngs: false,\n            nonExplicitSupportedLngs: false,\n            load: 'all',\n            preload: false,\n            simplifyPluralSuffix: true,\n            keySeparator: '.',\n            nsSeparator: ':',\n            pluralSeparator: '_',\n            contextSeparator: '_',\n            partialBundledLanguages: false,\n            saveMissing: false,\n            updateMissing: false,\n            saveMissingTo: 'fallback',\n            saveMissingPlurals: true,\n            missingKeyHandler: false,\n            missingInterpolationHandler: false,\n            postProcess: false,\n            postProcessPassResolved: false,\n            returnNull: true,\n            returnEmptyString: true,\n            returnObjects: false,\n            joinArrays: false,\n            returnedObjectHandler: false,\n            parseMissingKeyHandler: false,\n            appendNamespaceToMissingKey: false,\n            appendNamespaceToCIMode: false,\n            overloadTranslationOptionHandler: function handle(args) {\n                var ret = {};\n                if (typeof args[1] === 'object')\n                    ret = args[1];\n                if (typeof args[1] === 'string')\n                    ret.defaultValue = args[1];\n                if (typeof args[2] === 'string')\n                    ret.tDescription = args[2];\n                if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n                    var options = args[3] || args[2];\n                    Object.keys(options).forEach(function (key) {\n                        ret[key] = options[key];\n                    });\n                }\n                return ret;\n            },\n            interpolation: {\n                escapeValue: true,\n                format: (value, format, lng, options) => value,\n                prefix: '{{',\n                suffix: '}}',\n                formatSeparator: ',',\n                unescapePrefix: '-',\n                nestingPrefix: '$t(',\n                nestingSuffix: ')',\n                nestingOptionsSeparator: ',',\n                maxReplaces: 1000,\n                skipOnVariables: false\n            }\n        };\n    }\n    \n    function transformOptions(options) {\n        if (typeof options.ns === 'string')\n            options.ns = [options.ns];\n        if (typeof options.fallbackLng === 'string')\n            options.fallbackLng = [options.fallbackLng];\n        if (typeof options.fallbackNS === 'string')\n            options.fallbackNS = [options.fallbackNS];\n        if (options.whitelist) {\n            if (options.whitelist && options.whitelist.indexOf('cimode') < 0) {\n                options.whitelist = options.whitelist.concat(['cimode']);\n            }\n            options.supportedLngs = options.whitelist;\n        }\n        if (options.nonExplicitWhitelist) {\n            options.nonExplicitSupportedLngs = options.nonExplicitWhitelist;\n        }\n        if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n            options.supportedLngs = options.supportedLngs.concat(['cimode']);\n        }\n        return options;\n    }\n\n    return {\n        get: get,\n        transformOptions: transformOptions\n    };\n});"]}