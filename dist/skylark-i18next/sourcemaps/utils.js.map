{"version":3,"sources":["utils.js"],"names":["define","getLastOfPath","object","path","Empty","cleanKey","key","indexOf","replace","canNotTraverseDeeper","stack","concat","split","length","shift","obj","k","getPath","_entityMap","&","<",">","\"","'","/","defer","res","rej","promise","Promise","resolve","reject","makeString","copy","a","s","t","forEach","m","setPath","newValue","Object","pushPath","push","getPathWithDefaults","data","defaultData","value","undefined","deepExtend","target","source","overwrite","prop","String","regexEscape","str","escape","isIE10","window","navigator","userAgent"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aAuBA,SAASC,EAAcC,EAAQC,EAAMC,GACjC,SAASC,EAASC,GACd,OAAOA,GAAOA,EAAIC,QAAQ,QAAU,EAAID,EAAIE,QAAQ,OAAQ,KAAOF,EAEvE,SAASG,IACL,OAAQP,GAA4B,iBAAXA,EAE7B,MAAMQ,EAAwB,iBAATP,KAAuBQ,OAAOR,GAAQA,EAAKS,MAAM,KACtE,KAAOF,EAAMG,OAAS,GAAG,CACrB,GAAIJ,IACA,SACJ,MAAMH,EAAMD,EAASK,EAAMI,UACtBZ,EAAOI,IAAQF,IAChBF,EAAOI,GAAO,IAAIF,GACtBF,EAASA,EAAOI,GAEpB,OAAIG,QAGAM,IAAKb,EACLc,EAAGX,EAASK,EAAMI,UAe1B,SAASG,EAAQf,EAAQC,GACrB,MAAMY,IAACA,EAAGC,EAAEA,GAAKf,EAAcC,EAAQC,GACvC,GAAKY,EAEL,OAAOA,EAAIC,GA6Bf,IAAIE,GACAC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,QACLC,IAAK,UAST,OACIC,MA1GJ,WACI,IAAIC,EACAC,EACJ,MAAMC,EAAU,IAAIC,QAAQ,CAACC,EAASC,KAClCL,EAAMI,EACNH,EAAMI,IAIV,OAFAH,EAAQE,QAAUJ,EAClBE,EAAQG,OAASJ,EACVC,GAkGPI,WAhGJ,SAAoB9B,GAChB,OAAc,MAAVA,EACO,GACJ,GAAKA,GA8FZ+B,KA5FJ,SAAcC,EAAGC,EAAGC,GAChBF,EAAEG,QAAQC,IACFH,EAAEG,KACFF,EAAEE,GAAKH,EAAEG,OA0FjBC,QAhEJ,SAAiBrC,EAAQC,EAAMqC,GAC3B,MAAMzB,IAACA,EAAGC,EAAEA,GAAKf,EAAcC,EAAQC,EAAMsC,QAC7C1B,EAAIC,GAAKwB,GA+DTE,SA7DJ,SAAkBxC,EAAQC,EAAMqC,EAAU7B,GACtC,MAAMI,IAACA,EAAGC,EAAEA,GAAKf,EAAcC,EAAQC,EAAMsC,QAC7C1B,EAAIC,GAAKD,EAAIC,OACTL,IACAI,EAAIC,GAAKD,EAAIC,GAAGL,OAAO6B,IACtB7B,GACDI,EAAIC,GAAG2B,KAAKH,IAwDhBvB,QAASA,EACT2B,oBAjDJ,SAA6BC,EAAMC,EAAaxC,GAC5C,MAAMyC,EAAQ9B,EAAQ4B,EAAMvC,GAC5B,YAAc0C,IAAVD,EACOA,EAEJ9B,EAAQ6B,EAAaxC,IA6C5B2C,WA3CJ,SAASA,EAAWC,EAAQC,EAAQC,GAChC,IAAK,MAAMC,KAAQF,EACF,cAATE,IACIA,KAAQH,EACoB,iBAAjBA,EAAOG,IAAsBH,EAAOG,aAAiBC,QAAkC,iBAAjBH,EAAOE,IAAsBF,EAAOE,aAAiBC,OAC9HF,IACAF,EAAOG,GAAQF,EAAOE,IAE1BJ,EAAWC,EAAOG,GAAOF,EAAOE,GAAOD,GAG3CF,EAAOG,GAAQF,EAAOE,IAIlC,OAAOH,GA6BPK,YA3BJ,SAAqBC,GACjB,OAAOA,EAAIhD,QAAQ,sCAAuC,SA2B1DiD,OAjBJ,SAAgBZ,GACZ,MAAoB,iBAATA,EACAA,EAAKrC,QAAQ,aAAc2B,GAAKjB,EAAWiB,IAE/CU,GAcPa,OAZ6B,oBAAXC,QAA0BA,OAAOC,WAAaD,OAAOC,UAAUC,WAAaF,OAAOC,UAAUC,UAAUtD,QAAQ,SAAW","file":"../utils.js","sourcesContent":["define(function () {\n    'use strict';\n    function defer() {\n        let res;\n        let rej;\n        const promise = new Promise((resolve, reject) => {\n            res = resolve;\n            rej = reject;\n        });\n        promise.resolve = res;\n        promise.reject = rej;\n        return promise;\n    }\n    function makeString(object) {\n        if (object == null)\n            return '';\n        return '' + object;\n    }\n    function copy(a, s, t) {\n        a.forEach(m => {\n            if (s[m])\n                t[m] = s[m];\n        });\n    }\n    function getLastOfPath(object, path, Empty) {\n        function cleanKey(key) {\n            return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n        }\n        function canNotTraverseDeeper() {\n            return !object || typeof object === 'string';\n        }\n        const stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n        while (stack.length > 1) {\n            if (canNotTraverseDeeper())\n                return {};\n            const key = cleanKey(stack.shift());\n            if (!object[key] && Empty)\n                object[key] = new Empty();\n            object = object[key];\n        }\n        if (canNotTraverseDeeper())\n            return {};\n        return {\n            obj: object,\n            k: cleanKey(stack.shift())\n        };\n    }\n    function setPath(object, path, newValue) {\n        const {obj, k} = getLastOfPath(object, path, Object);\n        obj[k] = newValue;\n    }\n    function pushPath(object, path, newValue, concat) {\n        const {obj, k} = getLastOfPath(object, path, Object);\n        obj[k] = obj[k] || [];\n        if (concat)\n            obj[k] = obj[k].concat(newValue);\n        if (!concat)\n            obj[k].push(newValue);\n    }\n    function getPath(object, path) {\n        const {obj, k} = getLastOfPath(object, path);\n        if (!obj)\n            return undefined;\n        return obj[k];\n    }\n    function getPathWithDefaults(data, defaultData, key) {\n        const value = getPath(data, key);\n        if (value !== undefined) {\n            return value;\n        }\n        return getPath(defaultData, key);\n    }\n    function deepExtend(target, source, overwrite) {\n        for (const prop in source) {\n            if (prop !== '__proto__') {\n                if (prop in target) {\n                    if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n                        if (overwrite)\n                            target[prop] = source[prop];\n                    } else {\n                        deepExtend(target[prop], source[prop], overwrite);\n                    }\n                } else {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n    function regexEscape(str) {\n        return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n    }\n    var _entityMap = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        \"'\": '&#39;',\n        '/': '&#x2F;'\n    };\n    function escape(data) {\n        if (typeof data === 'string') {\n            return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n        }\n        return data;\n    }\n    const isIE10 = typeof window !== 'undefined' && window.navigator && window.navigator.userAgent && window.navigator.userAgent.indexOf('MSIE') > -1;\n    return {\n        defer: defer,\n        makeString: makeString,\n        copy: copy,\n        setPath: setPath,\n        pushPath: pushPath,\n        getPath: getPath,\n        getPathWithDefaults: getPathWithDefaults,\n        deepExtend: deepExtend,\n        regexEscape: regexEscape,\n        escape: escape,\n        isIE10: isIE10\n    };\n});"]}