{"version":3,"sources":["i18next.js"],"names":["define","baseLogger","EventEmitter","ResourceStore","Translator","LanguageUtils","PluralResolver","Interpolator","BackendConnector","defaults","postProcessor","utils","noop","I18n","[object Object]","options","callback","super","isIE10","call","this","transformOptions","services","logger","modules","external","isInitialized","isClone","initImmediate","init","setTimeout","createClassOnDemand","ClassOrObject","whitelist","supportedLngs","deprecate","nonExplicitWhitelist","nonExplicitSupportedLngs","get","format","interpolation","lu","store","resources","s","resourceStore","languageUtils","pluralResolver","prepend","pluralSeparator","compatibilityJSON","simplifyPluralSuffix","interpolator","hasLoadedNamespace","bind","backendConnector","backend","on","event","args","emit","languageDetector","detection","i18nFormat","translator","forEach","m","lng","warn","fcName","deferred","defer","load","changeLanguage","err","t","log","resolve","language","usedCallback","usedLng","partialBundledLanguages","toLowerCase","toLoad","append","toResolveHierarchy","l","indexOf","push","getFallbackCodes","fallbackLng","preload","ns","lngs","languages","reload","module","Error","type","error","addPostProcessor","isLanguageChangingTo","done","undefined","setLng","getBestMatchFromCodes","cacheUserLanguage","loadResources","async","detect","fixedT","key","opts","rest","overloadTranslationOptionHandler","concat","translate","exists","defaultNS","length","lastLng","loadNotPending","n","loadState","state","precheck","preResult","hasResourceBundle","Promise","preloaded","newLngs","filter","getLanguagePartFromCode","mergedOptions","clone"],"mappings":"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","file":"../i18next.js","sourcesContent":["define([\n    './logger',\n    './EventEmitter',\n    './ResourceStore',\n    './Translator',\n    './LanguageUtils',\n    './PluralResolver',\n    './Interpolator',\n    './BackendConnector',\n    './defaults',\n    './postProcessor',\n    './utils'\n], function (baseLogger, EventEmitter, ResourceStore, Translator, LanguageUtils, PluralResolver, Interpolator, BackendConnector, defaults,  postProcessor, utils) {\n    'use strict';\n    function noop() {\n    }\n    class I18n extends EventEmitter {\n        constructor(options = {}, callback) {\n            super();\n            if (utils.isIE10) {\n                EventEmitter.call(this);\n            }\n            this.options = defaults.transformOptions(options);\n            this.services = {};\n            this.logger = baseLogger;\n            this.modules = { external: [] };\n            if (callback && !this.isInitialized && !options.isClone) {\n                if (!this.options.initImmediate) {\n                    this.init(options, callback);\n                    return this;\n                }\n                setTimeout(() => {\n                    this.init(options, callback);\n                }, 0);\n            }\n        }\n        init(options = {}, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = {};\n            }\n            if (options.whitelist && !options.supportedLngs) {\n                this.logger.deprecate('whitelist', 'option \"whitelist\" will be renamed to \"supportedLngs\" in the next major - please make sure to rename this option asap.');\n            }\n            if (options.nonExplicitWhitelist && !options.nonExplicitSupportedLngs) {\n                this.logger.deprecate('whitelist', 'options \"nonExplicitWhitelist\" will be renamed to \"nonExplicitSupportedLngs\" in the next major - please make sure to rename this option asap.');\n            }\n            this.options = {\n                ...defaults.get(),\n                ...this.options,\n                ...defaults.transformOptions(options)\n            };\n            this.format = this.options.interpolation.format;\n            if (!callback)\n                callback = noop;\n            function createClassOnDemand(ClassOrObject) {\n                if (!ClassOrObject)\n                    return null;\n                if (typeof ClassOrObject === 'function')\n                    return new ClassOrObject();\n                return ClassOrObject;\n            }\n            if (!this.options.isClone) {\n                if (this.modules.logger) {\n                    baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n                } else {\n                    baseLogger.init(null, this.options);\n                }\n                const lu = new LanguageUtils(this.options);\n                this.store = new ResourceStore(this.options.resources, this.options);\n                const s = this.services;\n                s.logger = baseLogger;\n                s.resourceStore = this.store;\n                s.languageUtils = lu;\n                s.pluralResolver = new PluralResolver(lu, {\n                    prepend: this.options.pluralSeparator,\n                    compatibilityJSON: this.options.compatibilityJSON,\n                    simplifyPluralSuffix: this.options.simplifyPluralSuffix\n                });\n                s.interpolator = new Interpolator(this.options);\n                s.utils = { hasLoadedNamespace: this.hasLoadedNamespace.bind(this) };\n                s.backendConnector = new BackendConnector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n                s.backendConnector.on('*', (event, ...args) => {\n                    this.emit(event, ...args);\n                });\n                if (this.modules.languageDetector) {\n                    s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n                    s.languageDetector.init(s, this.options.detection, this.options);\n                }\n                if (this.modules.i18nFormat) {\n                    s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n                    if (s.i18nFormat.init)\n                        s.i18nFormat.init(this);\n                }\n                this.translator = new Translator(this.services, this.options);\n                this.translator.on('*', (event, ...args) => {\n                    this.emit(event, ...args);\n                });\n                this.modules.external.forEach(m => {\n                    if (m.init)\n                        m.init(this);\n                });\n            }\n            if (!this.modules.languageDetector && !this.options.lng) {\n                this.logger.warn('init: no languageDetector is used and no lng is defined');\n            }\n            const storeApi = [\n                'getResource',\n                'hasResourceBundle',\n                'getResourceBundle',\n                'getDataByLanguage'\n            ];\n            storeApi.forEach(fcName => {\n                this[fcName] = (...args) => this.store[fcName](...args);\n            });\n            const storeApiChained = [\n                'addResource',\n                'addResources',\n                'addResourceBundle',\n                'removeResourceBundle'\n            ];\n            storeApiChained.forEach(fcName => {\n                this[fcName] = (...args) => {\n                    this.store[fcName](...args);\n                    return this;\n                };\n            });\n            const deferred = utils.defer();\n            const load = () => {\n                this.changeLanguage(this.options.lng, (err, t) => {\n                    this.isInitialized = true;\n                    this.logger.log('initialized', this.options);\n                    this.emit('initialized', this.options);\n                    deferred.resolve(t);\n                    callback(err, t);\n                });\n            };\n            if (this.options.resources || !this.options.initImmediate) {\n                load();\n            } else {\n                setTimeout(load, 0);\n            }\n            return deferred;\n        }\n        loadResources(language, callback = noop) {\n            let usedCallback = callback;\n            let usedLng = typeof language === 'string' ? language : this.language;\n            if (typeof language === 'function')\n                usedCallback = language;\n            if (!this.options.resources || this.options.partialBundledLanguages) {\n                if (usedLng && usedLng.toLowerCase() === 'cimode')\n                    return usedCallback();\n                const toLoad = [];\n                const append = lng => {\n                    if (!lng)\n                        return;\n                    const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n                    lngs.forEach(l => {\n                        if (toLoad.indexOf(l) < 0)\n                            toLoad.push(l);\n                    });\n                };\n                if (!usedLng) {\n                    const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n                    fallbacks.forEach(l => append(l));\n                } else {\n                    append(usedLng);\n                }\n                if (this.options.preload) {\n                    this.options.preload.forEach(l => append(l));\n                }\n                this.services.backendConnector.load(toLoad, this.options.ns, usedCallback);\n            } else {\n                usedCallback(null);\n            }\n        }\n        reloadResources(lngs, ns, callback) {\n            const deferred = utils.defer();\n            if (!lngs)\n                lngs = this.languages;\n            if (!ns)\n                ns = this.options.ns;\n            if (!callback)\n                callback = noop;\n            this.services.backendConnector.reload(lngs, ns, err => {\n                deferred.resolve();\n                callback(err);\n            });\n            return deferred;\n        }\n        use(module) {\n            if (!module)\n                throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n            if (!module.type)\n                throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n            if (module.type === 'backend') {\n                this.modules.backend = module;\n            }\n            if (module.type === 'logger' || module.log && module.warn && module.error) {\n                this.modules.logger = module;\n            }\n            if (module.type === 'languageDetector') {\n                this.modules.languageDetector = module;\n            }\n            if (module.type === 'i18nFormat') {\n                this.modules.i18nFormat = module;\n            }\n            if (module.type === 'postProcessor') {\n                postProcessor.addPostProcessor(module);\n            }\n            if (module.type === '3rdParty') {\n                this.modules.external.push(module);\n            }\n            return this;\n        }\n        changeLanguage(lng, callback) {\n            this.isLanguageChangingTo = lng;\n            const deferred = utils.defer();\n            this.emit('languageChanging', lng);\n            const done = (err, l) => {\n                if (l) {\n                    this.language = l;\n                    this.languages = this.services.languageUtils.toResolveHierarchy(l);\n                    this.translator.changeLanguage(l);\n                    this.isLanguageChangingTo = undefined;\n                    this.emit('languageChanged', l);\n                    this.logger.log('languageChanged', l);\n                } else {\n                    this.isLanguageChangingTo = undefined;\n                }\n                deferred.resolve((...args) => this.t(...args));\n                if (callback)\n                    callback(err, (...args) => this.t(...args));\n            };\n            const setLng = lngs => {\n                const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n                if (l) {\n                    if (!this.language) {\n                        this.language = l;\n                        this.languages = this.services.languageUtils.toResolveHierarchy(l);\n                    }\n                    if (!this.translator.language)\n                        this.translator.changeLanguage(l);\n                    if (this.services.languageDetector)\n                        this.services.languageDetector.cacheUserLanguage(l);\n                }\n                this.loadResources(l, err => {\n                    done(err, l);\n                });\n            };\n            if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n                setLng(this.services.languageDetector.detect());\n            } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n                this.services.languageDetector.detect(setLng);\n            } else {\n                setLng(lng);\n            }\n            return deferred;\n        }\n        getFixedT(lng, ns) {\n            const fixedT = (key, opts, ...rest) => {\n                let options;\n                if (typeof opts !== 'object') {\n                    options = this.options.overloadTranslationOptionHandler([\n                        key,\n                        opts\n                    ].concat(rest));\n                } else {\n                    options = { ...opts };\n                }\n                options.lng = options.lng || fixedT.lng;\n                options.lngs = options.lngs || fixedT.lngs;\n                options.ns = options.ns || fixedT.ns;\n                return this.t(key, options);\n            };\n            if (typeof lng === 'string') {\n                fixedT.lng = lng;\n            } else {\n                fixedT.lngs = lng;\n            }\n            fixedT.ns = ns;\n            return fixedT;\n        }\n        t(...args) {\n            return this.translator && this.translator.translate(...args);\n        }\n        exists(...args) {\n            return this.translator && this.translator.exists(...args);\n        }\n        setDefaultNamespace(ns) {\n            this.options.defaultNS = ns;\n        }\n        hasLoadedNamespace(ns, options = {}) {\n            if (!this.isInitialized) {\n                this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n                return false;\n            }\n            if (!this.languages || !this.languages.length) {\n                this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n                return false;\n            }\n            const lng = this.languages[0];\n            const fallbackLng = this.options ? this.options.fallbackLng : false;\n            const lastLng = this.languages[this.languages.length - 1];\n            if (lng.toLowerCase() === 'cimode')\n                return true;\n            const loadNotPending = (l, n) => {\n                const loadState = this.services.backendConnector.state[`${ l }|${ n }`];\n                return loadState === -1 || loadState === 2;\n            };\n            if (options.precheck) {\n                const preResult = options.precheck(this, loadNotPending);\n                if (preResult !== undefined)\n                    return preResult;\n            }\n            if (this.hasResourceBundle(lng, ns))\n                return true;\n            if (!this.services.backendConnector.backend)\n                return true;\n            if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns)))\n                return true;\n            return false;\n        }\n        loadNamespaces(ns, callback) {\n            const deferred = utils.defer();\n            if (!this.options.ns) {\n                callback && callback();\n                return Promise.resolve();\n            }\n            if (typeof ns === 'string')\n                ns = [ns];\n            ns.forEach(n => {\n                if (this.options.ns.indexOf(n) < 0)\n                    this.options.ns.push(n);\n            });\n            this.loadResources(err => {\n                deferred.resolve();\n                if (callback)\n                    callback(err);\n            });\n            return deferred;\n        }\n        loadLanguages(lngs, callback) {\n            const deferred = utils.defer();\n            if (typeof lngs === 'string')\n                lngs = [lngs];\n            const preloaded = this.options.preload || [];\n            const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0);\n            if (!newLngs.length) {\n                if (callback)\n                    callback();\n                return Promise.resolve();\n            }\n            this.options.preload = preloaded.concat(newLngs);\n            this.loadResources(err => {\n                deferred.resolve();\n                if (callback)\n                    callback(err);\n            });\n            return deferred;\n        }\n        dir(lng) {\n            if (!lng)\n                lng = this.languages && this.languages.length > 0 ? this.languages[0] : this.language;\n            if (!lng)\n                return 'rtl';\n            const rtlLngs = [\n                'ar',\n                'shu',\n                'sqr',\n                'ssh',\n                'xaa',\n                'yhd',\n                'yud',\n                'aao',\n                'abh',\n                'abv',\n                'acm',\n                'acq',\n                'acw',\n                'acx',\n                'acy',\n                'adf',\n                'ads',\n                'aeb',\n                'aec',\n                'afb',\n                'ajp',\n                'apc',\n                'apd',\n                'arb',\n                'arq',\n                'ars',\n                'ary',\n                'arz',\n                'auz',\n                'avl',\n                'ayh',\n                'ayl',\n                'ayn',\n                'ayp',\n                'bbz',\n                'pga',\n                'he',\n                'iw',\n                'ps',\n                'pbt',\n                'pbu',\n                'pst',\n                'prp',\n                'prd',\n                'ug',\n                'ur',\n                'ydd',\n                'yds',\n                'yih',\n                'ji',\n                'yi',\n                'hbo',\n                'men',\n                'xmn',\n                'fa',\n                'jpr',\n                'peo',\n                'pes',\n                'prs',\n                'dv',\n                'sam'\n            ];\n            return rtlLngs.indexOf(this.services.languageUtils.getLanguagePartFromCode(lng)) >= 0 ? 'rtl' : 'ltr';\n        }\n        createInstance(options = {}, callback) {\n            return new I18n(options, callback);\n        }\n        cloneInstance(options = {}, callback = noop) {\n            const mergedOptions = {\n                ...this.options,\n                ...options,\n                ...{ isClone: true }\n            };\n            const clone = new I18n(mergedOptions);\n            const membersToCopy = [\n                'store',\n                'services',\n                'language'\n            ];\n            membersToCopy.forEach(m => {\n                clone[m] = this[m];\n            });\n            clone.services = { ...this.services };\n            clone.services.utils = { hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone) };\n            clone.translator = new Translator(clone.services, clone.options);\n            clone.translator.on('*', (event, ...args) => {\n                clone.emit(event, ...args);\n            });\n            clone.init(mergedOptions, callback);\n            clone.translator.options = clone.options;\n            clone.translator.backendConnector.services.utils = { hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone) };\n            return clone;\n        }\n    }\n    return new I18n();\n});"]}